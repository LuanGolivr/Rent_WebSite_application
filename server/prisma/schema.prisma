// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User{
  id Int @id @default(autoincrement())
  email String @unique
  password String
  firstName String
  surname String
  cpf String @unique
  isAgent Boolean
  phoneNumber String? @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  properties Property[]
  wishList WishList?
}

model Property {
  id Int @id @default(autoincrement())
  available Boolean @default(false)
  sellOrRent String @default("sell")
  propertyType String @default("apartment")
  title String
  description String
  street String
  neighborhood String
  city String
  state String
  furnished Boolean @default(false)
  rooms Int
  suites Int @default(0)
  bathrooms Int
  parkingSpace Int @default(0)
  area Float
  condominiumPrice Float @default(0)
  price Float
  playground Boolean @default(false)
  gym Boolean @default(false)
  gourmetArea Boolean @default(false)
  sportCourt Boolean @default(false)
  pool Boolean @default(false)
  warmPool Boolean @default(false)
  greenArea Boolean @default(false)
  owner User @relation(fields: [ownerId], references: [id])
  ownerId Int
  wishList PropertiesOnWishList[]
  imageVideo ImageVideo?
}

model WishList {
  id Int @id @default(autoincrement())
  user User @relation(fields: [userId], references: [id])
  userId Int @unique
  properties PropertiesOnWishList[]
}

model PropertiesOnWishList {
  property Property @relation(fields: [propertyId], references: [id])
  propertyId Int
  wishList WishList @relation(fields: [wishListId], references: [id])
  wishListId Int
  assignedAt DateTime @default(now())
  
  @@id([propertyId, wishListId])
}

model ImageVideo {
  id Int @id @default(autoincrement())
  url String
  property Property @relation(fields: [propertyId], references: [id])
  propertyId Int @unique
}